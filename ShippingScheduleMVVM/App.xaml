<Application x:Class="ShippingScheduleMVVM.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             >
    <Application.Resources>
        
        <ResourceDictionary>
            <!-- MainStyles -->
            <ResourceDictionary.MergedDictionaries>
                <!-- Theme Colors-->
                <ResourceDictionary>
                    <SolidColorBrush x:Key="PrimaryThemeColor" Color="#433d8a" />
                    <SolidColorBrush x:Key="DarkPrimaryThemeColor" Color="#312f75" />
                    <!-- {StaticResource ResourceKey=PrimaryThemeColor} -->
                </ResourceDictionary>
                
                <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Dictionaries/Fonts.xaml" />

                <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/SliderStyle.xaml"/>

                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/ComboBoxStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/ComboBoxSmallStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/ComboBoxItemContainerStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/DatePickerStyle.xaml"/>
                        <ResourceDictionary Source="pack://application:,,,/ShippingScheduleMVVM;component/Resources/Styles/DatePickerCalendarStyle.xaml"/>

                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
 
            <!-- Aditional Styles -->
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="#FFBCBCBC"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="1.5" Height="9" Width="9">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Data="M14.121,12,18,8.117A1.5,1.5,0,0,0,15.883,6L12,9.879,8.11,5.988A1.5,1.5,0,1,0,5.988,8.11L9.879,12,6,15.882A1.5,1.5,0,1,0,8.118,18L12,14.121,15.878,18A1.5,1.5,0,0,0,18,15.878Z" Fill="White" Margin="2" Opacity="0" Stretch="Uniform"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="0" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource ResourceKey=PrimaryThemeColor}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource ResourceKey=PrimaryThemeColor}"/>
                                    <Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="0"/>
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="#FFBCBCBC"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" CornerRadius="1.5" Height="9" Width="9">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Data="M163.865,436.934c-14.406,0.006-28.222-5.72-38.4-15.915L9.369,304.966c-12.492-12.496-12.492-32.752,0-45.248l0,0   c12.496-12.492,32.752-12.492,45.248,0l109.248,109.248L452.889,79.942c12.496-12.492,32.752-12.492,45.248,0l0,0   c12.492,12.496,12.492,32.752,0,45.248L202.265,421.019C192.087,431.214,178.271,436.94,163.865,436.934z" Fill="White" Margin="1" Opacity="0" Stretch="Uniform"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="0" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false"> 
                                    
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource ResourceKey=PrimaryThemeColor}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource ResourceKey=PrimaryThemeColor}"/>
                                    <Setter Property="BorderThickness" TargetName="checkBoxBorder" Value="0"/>
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
                   
        </ResourceDictionary>
                
    </Application.Resources>
</Application>
